name: Deploy to LangGraph Cloud

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test graph creation
      run: |
        cd rag_extraction
        python -c "from graph import create_extraction_graph; print('âœ… Graph creation successful')"
    
    - name: Validate schema
      run: |
        cd rag_extraction
        python -c "from schemas.state import ExtractionState; from schemas.entities import ExtractedEntity; print('âœ… Schema validation successful')"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install LangGraph CLI
      run: |
        pip install langgraph-cli
    
    - name: Test local deployment
      run: |
        echo "Testing LangGraph application structure..."
        langgraph build --config langgraph.json
    
    - name: Notify deployment ready
      run: |
        echo "ðŸš€ Application is ready for LangGraph Cloud deployment!"
        echo "ðŸ“‹ Next steps:"
        echo "1. Go to https://smith.langchain.com"
        echo "2. Navigate to LangGraph Platform â†’ New Deployment"
        echo "3. Select this repository: ${{ github.repository }}"
        echo "4. Configure environment variables"
        echo "5. Deploy to cloud"